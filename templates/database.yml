# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem "pg"
#

default: &default
  adapter: postgresql
  encoding: unicode
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  host: <%= ENV.fetch("RAILS_DB_HOST") { "127.0.0.1" } %>
  port: <%= ENV.fetch("RAILS_DB_PORT") { "5432" } %>
  username: <%= ENV.fetch("POSTGRES_USER") { "postgres" } %>
  password: <%= ENV.fetch("POSTGRES_PASSWORD") { "postgres" } %>

development:
  <<: *default
  database: <%= ENV.fetch("DATABASE_NAME") { "#{app_name}_development" } %>

test:
  <<: *default
  database: <%= ENV.fetch("DATABASE_NAME") { "#{app_name}_test" } %>

production:
  primary: &primary_production
    <<: *default
    database: <%= ENV.fetch("DATABASE_NAME") { "#{app_name}_production" } %>
    username: <%= ENV["POSTGRES_USER"] %>
    password: <%= ENV["POSTGRES_PASSWORD"] %>

  cache:
    <<: *primary_production
    database: <%= ENV.fetch("DATABASE_NAME") { "#{app_name}_production_cache" } %>
    migrations_paths: db/cache_migrate

  queue:
    <<: *primary_production
    database: <%= ENV.fetch("DATABASE_NAME") { "#{app_name}_production_queue" } %>
    migrations_paths: db/queue_migrate

  cable:
    <<: *primary_production
    database: <%= ENV.fetch("DATABASE_NAME") { "#{app_name}_production_cable" } %>
    migrations_paths: db/cable_migrate